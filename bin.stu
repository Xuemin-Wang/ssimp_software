    bin/ssimp
:   $[LINKER=bin/o/LINKER]
    $[LD_FLAGS=bin/o/LD_FLAGS]

    bin/o/ssimp.o
    bin/o/options.o
    bin/o/file.reading.o
    bin/o/compression.o
    bin/o/mvn/mvn.o
    bin/o/gz/gzstream/gzstream.o
    bin/o/vcfGTz_reader.o
{
    echo LINKER:"${LINKER}" | tr '\n' ' '; echo
    echo LD_FLAGS:"${LD_FLAGS}" | tr '\n' ' '; echo
    ${LINKER} \
        bin/o/options.o \
        bin/o/ssimp.o \
        bin/o/file.reading.o \
        bin/o/compression.o  \
        bin/o/mvn/mvn.o \
        bin/o/gz/gzstream/gzstream.o \
        bin/o/vcfGTz_reader.o \
        ${LD_FLAGS}               \
    -o bin/ssimp
}

>   bin/LIST_OF_HH_FILES
:      @mkdir..bin/o
    @unconditional
{
    find src -name '*.hh'
}

    bin/o/${name}.o
:   src/${name}.cc
    $[CXX_WITH_FLAGS=bin/o/CXX_WITH_FLAGS]
    [bin/LIST_OF_HH_FILES]
{
    mkdir -p "$(dirname "bin/o/${name}.o")"
    ${CXX_WITH_FLAGS} -c "src/${name}.cc" -o "bin/o/${name}.o"
}

# special rule for gzstream.o # http://www.cs.unc.edu/Research/compgeom/gzstream/#src
    bin/o/gz/gzstream/gzstream.o
:   src/gz/gzstream/gzstream.C
    $[CXX_WITH_FLAGS=bin/o/CXX_WITH_FLAGS]
    [bin/LIST_OF_HH_FILES]
{
    mkdir -p bin/o/gz/gzstream
    ${CXX_WITH_FLAGS} -c "src/gz/gzstream/gzstream.C" -o "bin/o/gz/gzstream/gzstream.o"
}

    bin/vcfGTz
:   $[LINKER=bin/o/LINKER]
    $[LD_FLAGS=bin/o/LD_FLAGS]
    bin/o/vcfGTz.o
    bin/o/gz/gzstream/gzstream.o
    bin/o/zlib-vector-of-char/zlib-vector.o
{
    echo LINKER:"${LINKER}" | tr '\n' ' '; echo
    echo LD_FLAGS:"${LD_FLAGS}" | tr '\n' ' '; echo
    ${LINKER} \
        bin/o/vcfGTz.o \
        bin/o/gz/gzstream/gzstream.o \
        bin/o/zlib-vector-of-char/zlib-vector.o \
        ${LD_FLAGS}               \
    -o bin/vcfGTz
}

>       bin/o/GCC_OR_CLANG
:      @mkdir..bin/o
       @all.stu.files
{
    which clang++ g++ c++ clang | head -n1 # find one of these compilers

    # Also, include some general args we want to always pass,
    # regardless of whether we're compiling or linking

    echo " -O2"
    echo " -Wall -Wextra -std=c++14"
    if   test "$(whoami)" = 'amcdaid'  \
           -o "$(whoami)" = 'aaron'
    then
           echo ' -Werror'
    fi

    #echo " -pg -ggdb                  " # For profiling
}

>       bin/o/LINKER
:       bin/o/GCC_OR_CLANG
{
    cat bin/o/GCC_OR_CLANG
    echo  " -lstdc++"
}
>       bin/o/LD_FLAGS
:       bin/local/gsl_libs
        bin.stu
{
    cat bin/local/gsl_libs
    echo " -lz "
}
>       bin/o/CXX_WITH_FLAGS
:       bin/o/GCC_OR_CLANG
        bin/local/gsl_cflags
{
    cat bin/o/GCC_OR_CLANG;
    echo " -isystem src/gz/gzstream "
    echo " -DGZSTREAM_NAMESPACE=gz "
    cat bin/local/gsl_cflags
}

>       bin/local/gsl_cflags
:      @mkdir..bin/local
{
    gsl-config --cflags # For example: "-I/usr/include"
}
>       bin/local/gsl_libs
:      @mkdir..bin/local
{
    gsl-config --libs # For example: "-lgsl -lgslcblas -lm"
}

        @all.stu.files
:       main.stu
        bin.stu
;


                         deps.empty/mkdir..${path} {
    mkdir -p "$(dirname "deps.empty/mkdir..${path}")"
    mkdir -p "${path}"
    touch               "deps.empty/mkdir..${path}"
}
@mkdir..${path} : [deps.empty/mkdir..${path}] ;

@unconditional {}

        @clean
{
    rm bin/ssimp                 || :
    rm bin/vcfGTz                || :
    rm bin/o/CXX_WITH_FLAGS      || :
    rm bin/LIST_OF_HH_FILES      || :
    find bin/o -name '*.o' -exec rm {} \;
}
