@all.tests
:
    tests/lambda1.0/imputations.txt
    tests/test.whatever/imputations.txt
    tests/3.chromosomes/UKB.every100/imputations.txt
    tests/impute.range/chr1_1000000-chr1_2000000/imputations.txt
    tests/impute.range/chr2-3/imputations.txt
    tests/impute.range/chr2/imputations.txt
    tests/impute.snps/a.list.of.snps/imputations.txt
    tests/impute.maf/0.05/imputations.txt
    tests/tags.maf/tags.maf.0.01/imputations.txt

    tests/tags.range/chr1_1000000-chr1_2000000/imputations.txt
    tests/tags.range/chr2-3/imputations.txt
    tests/tags.range/chr2/imputations.txt
    tests/tags.snps/a.list.of.snps/imputations.txt

    tests/swapping/swap.just.the.allele.headers/imputations.txt
    tests/swapping/swap.some.alleles/imputations.txt
    tests/swapping/swap.some.alleles.and.their.zs/imputations.txt

    tests/test.wood/imputations.txt
    tests/test.wood.R/imputations.txt

    tests/test0/imputations.txt
    tests/test0.R/imputations.txt

    tests/sub1KG-tiny/EUR.via.filter.chr4.5/imputations.txt

    #tests.compare/COMP.wood.txt # a pseudo-test to check that both 'test.wood' and 'test.wood.R' agree with each other
    #tests.compare/COMP0.txt
;

    tests/${testname}/imputations.txt
:       bin/ssimp
    tests/${testname}/command
{
    export SSIMP=bin/ssimp
    export   REF=ref
    export  GWAS=gwas
    export COMMANDDIR="tests/${testname}"
    export PROF_CHANGE_DIR_AT_THE_LAST_MINUTE="${COMMANDDIR}"
    export OUTPUT="tests/${testname}"/output.actual.tmp
    export OUT_IMPUTATIONS="tests/${testname}"/imputations.txt
    export FORCE_THOUSANDS_SEPARATOR="'"

    rm                    "${PROF_CHANGE_DIR_AT_THE_LAST_MINUTE}"/gmon.out 2>/dev/null || :
    bash "tests/${testname}"/command

    if test -e "${PROF_CHANGE_DIR_AT_THE_LAST_MINUTE}"/gmon.out; then
        gprof "${SSIMP}" "${PROF_CHANGE_DIR_AT_THE_LAST_MINUTE}"/gmon.out > "${PROF_CHANGE_DIR_AT_THE_LAST_MINUTE}"/gmon.txt
        rm               "${PROF_CHANGE_DIR_AT_THE_LAST_MINUTE}"/gmon.out
    fi

    mv "tests/${testname}"/output.actual.tmp "tests/${testname}"/output.actual
}

tests/test0.R/imputations.txt {
    export COMMANDDIR=tests/test0.R
    ls -l tests/test0.R/test0.R
    Rscript --vanilla tests/test0.R/test0.R
}

> tests.compare/COMP${testname}.txt :
tests/test${testname}/imputations.txt
tests/test${testname}.R/imputations.txt
{
    mkdir -p tests.compare
    # load up both, and print the correlations between the results
    Rscript <(cat<<"EOF"
        testname = Sys.getenv('testname')
        readDT(paste0('tests/test',testname, '.R/imputations.txt'),'\t',T)  -> fromR
        readDT(paste0('tests/test',testname,   '/imputations.txt'),'\t',T) [,.(SNP=SNPname,z.CXX=z_imp,iq.CXX=impqual)]    -> fromCXX
        stopifnot(nrow(fromR) == nrow(fromCXX))
        join = fromR[fromCXX,on='SNP']
        z.cor  = join[,abs(Z.imp-z.CXX)]
        iq.cor = join[,abs(impqual- iq.CXX)]
        stopifnot(min( z.cor ) < 1e-5)
        stopifnot(min(iq.cor ) < 1e-5)
        catn('OK, both correlations are close to 1.0')
EOF
)
}


ref/sub1KG-18M/chr${chrm}.vcf.gz
ref/sub1KG-18M/chr${chrm}.vcf.gz.tbi
: -t @mkdirfile..ref/sub1KG-18M/chr${chrm}.vcf.gz
{
    test -f ref/link.to.1kg.data/ALL.chr${chrm}.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz
    zcat ref/link.to.1kg.data/ALL.chr${chrm}.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz |
        egrep -v '^##' | {
            IFS='' read -r JUST1LIINE
            printf "%s\n" "$JUST1LIINE"
            awk '$2 >= 18500000{exit} ; $2>=18000000'
        } | bgzip > /tmp/chr${chrm}.vcf.gz
        tabix       /tmp/chr${chrm}.vcf.gz
        mv /tmp/chr${chrm}.vcf.gz       ref/sub1KG-18M/chr${chrm}.vcf.gz
        mv /tmp/chr${chrm}.vcf.gz.tbi   ref/sub1KG-18M/chr${chrm}.vcf.gz.tbi
}
ref/sub1KG-tiny/chr${chrm}.vcf.gz
ref/sub1KG-tiny/chr${chrm}.vcf.gz.tbi
: -t @mkdirfile..ref/sub1KG-tiny/chr${chrm}.vcf.gz
{
    # This will take a subrange of the full 1kg data, but give preference
    # to tag SNPs (i.e. those in GIANT_HEIGHT_Wood_et_al_2014_publicrelease_HapMapCeuFreq.txt.gz  \
    zcat    ref/sub1KG-18M/chr${chrm}.vcf.gz |
        python <(cat<<"EOF"
# python script starts here

import sys
def main():
    tags = set( l.strip() for l in open(sys.argv[2]) if l != 'MarkerName\n' )
    #print tags
    vcf = open(sys.argv[1])
    print vcf.next(),
    for v in vcf:
        v_rs = v.split('\t')[2]
        if v_rs in tags:
            if v_rs[-1:] == '1': # 10% of the tags
                print v,
        else:
            if v_rs[-2:] == '00': # 1% of the non-tags
                print v,


main()
EOF
) <(zcat ref/sub1KG-18M/chr${chrm}.vcf.gz) <(zcat gwas/GIANT_HEIGHT_Wood_et_al_2014_publicrelease_HapMapCeuFreq.txt.gz | cut -f1) |
        bgzip > /tmp/chr${chrm}.vcf.gz
        tabix       /tmp/chr${chrm}.vcf.gz
        mv /tmp/chr${chrm}.vcf.gz       ref/sub1KG-tiny/chr${chrm}.vcf.gz
        mv /tmp/chr${chrm}.vcf.gz.tbi   ref/sub1KG-tiny/chr${chrm}.vcf.gz.tbi
}

@mkdirfile..${path} {
    mkdir -p "$(dirname "${path}")"
}
